{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js\";\n// react class component \nimport React from 'react';\nimport Cell from './Cell';\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {// const squares = this.state.squares.slice();\n    //       squares[i] = this.state.xIsNext ? \"X\":\"O\";\n    //       this.setState =({\n    //               squares:squares,\n    //               xIsNext:!this.state.xIsNext ? \"x\":\"O\"\n    //       }); \n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n} // function determineTheWinner(squares){\n//         const lines=[\n//                 [0,1,2],\n//                 [3,4,5],\n//                 [6,7,8],\n//                 [0,3,6],\n//                 [1,4,7],\n//                 [2,5,8],\n//                 [0,4,8],\n//                 [2,4,6],\n//         ];\n//         for (let i=0; i <  lines.length  ; i ++){\n//                 const [a,b,c] = lines[i];\n//                 if (squares[a] && squares[a] ===\n//                     squares[b] && squares[a]=== squares[c]) {\n//                             return squares[a];\n//                     }\n//         }\n//         return null;\n// }","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js"],"names":["React","Cell","Board","Component","constructor","props","state","squares","Array","fill","xIsNext","handleClick","i","renderSquare","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,eAAgB,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC5CC,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACX,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACJC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADL;AAEJC,MAAAA,OAAO,EAAC;AAFJ,KAAZ;AAIP;;AAETC,EAAAA,WAAW,CAACC,CAAD,EAAG,CACN;AACA;AACA;AACA;AACA;AACA;AACP;;AACDC,EAAAA,YAAY,CAACD,CAAD,EAAG;AACP,wBACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAG,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB,CAAd;AACM,MAAA,OAAO,EAAI,MAAI,KAAKD,WAAL,CAAiBC,CAAjB,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAKP;;AACDE,EAAAA,MAAM,GAAE;AACF,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKD,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAFF,eAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAPF,eAYE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAZF,CADA;AAmBE;;AA5C4C,C,CAgDpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// react class component \nimport React from 'react';\nimport Cell from './Cell';\nexport default  class Board extends React.Component {\n        constructor (props){\n                super(props)\n                this.state ={ \n                        squares :Array(9).fill(null),\n                        xIsNext:true\n                };\n        } \n\nhandleClick(i){\n        // const squares = this.state.squares.slice();\n        //       squares[i] = this.state.xIsNext ? \"X\":\"O\";\n        //       this.setState =({\n        //               squares:squares,\n        //               xIsNext:!this.state.xIsNext ? \"x\":\"O\"\n        //       }); \n}\nrenderSquare(i){ \n        return (\n        <Cell value ={this.state.squares[i]} \n              onClick = {()=>this.handleClick(i)}\n                />\n        );\n}\nrender(){\n      return( \n      <div className=\"container\">\n      {/* <div className=\"status\">{status}</div> */}\n        <div className=\"row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}           \n                {this.renderSquare(2)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}           \n                {this.renderSquare(5)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}           \n                {this.renderSquare(8)}\n        </div>\n      </div>\n      )}\n    }\n\n          \n// function determineTheWinner(squares){\n//         const lines=[\n//                 [0,1,2],\n//                 [3,4,5],\n//                 [6,7,8],\n//                 [0,3,6],\n//                 [1,4,7],\n//                 [2,5,8],\n//                 [0,4,8],\n//                 [2,4,6],\n\n//         ];\n//         for (let i=0; i <  lines.length  ; i ++){\n//                 const [a,b,c] = lines[i];\n//                 if (squares[a] && squares[a] ===\n//                     squares[b] && squares[a]=== squares[c]) {\n//                             return squares[a];\n//                     }\n//         }\n//         return null;\n// }\n\n"]},"metadata":{},"sourceType":"module"}