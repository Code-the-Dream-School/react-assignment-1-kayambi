{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board'; // import Header from './Header';\n\nexport default class Game extends Component {\n  // adding a constructor to  the Game  initial state to contain an array\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xisNext: true\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = determineTheWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = \"winner: \" + winner;\n    } else {\n      status = \"next player\" + (this.state.xisNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      OnClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, status)));\n  }\n\n}","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","history","squares","Array","fill","xisNext","render","current","length","winner","determineTheWinner","status","i","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AAGA,eAAe,MAAOC,IAAP,SAAoBF,SAApB,CAA8B;AAC7C;AACKG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,CAAC;AACPC,QAAAA,OAAO,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADG;AAIXC,MAAAA,OAAO,EAAG;AAJC,KAAb;AAMD;;AAEFC,EAAAA,MAAM,GAAE;AACN,UAAML,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMM,OAAO,GAAGN,OAAO,CAACA,OAAO,CAACO,MAAR,GAAgB,CAAjB,CAAvB;AACA,UAAMC,MAAM,GAAGC,kBAAkB,CAACH,OAAO,CAACL,OAAT,CAAjC;AACA,QAAKS,MAAL;;AACK,QAAIF,MAAJ,EAAW;AACTE,MAAAA,MAAM,GAAG,aAAaF,MAAtB;AAED,KAHD,MAGM;AACJE,MAAAA,MAAM,GAAG,iBAAgB,KAAKX,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAAzC,CAAT;AACD;;AACA,wBACM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACA,MAAA,OAAO,EAAEE,OAAO,CAACL,OADjB;AAEA,MAAA,OAAO,EAAIU,CAAD,IAAO,KAAKC,WAAL,CAAiBD,CAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,eAOA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAN,CADA,CAPA,CADN;AAcT;;AArC0C","sourcesContent":["import React, {Component}  from 'react';\nimport Board from './Board'; \n// import Header from './Header';\n\n\nexport default class  Game extends Component { \n// adding a constructor to  the Game  initial state to contain an array\n     constructor(props){\n       super(props)\n       this.state = {\n         history:[{\n           squares:Array(9).fill(null),\n         }],\n         xisNext : true,\n       };\n     }\n\n    render(){ \n      const history = this.state.history;\n      const current = history[history.length -1];\n      const winner = determineTheWinner(current.squares);\n      let  status;\n           if (winner){\n             status = \"winner: \" + winner;\n\n           }else {\n             status = \"next player\" +(this.state.xisNext ? \"X\":\"O\");\n           } \n            return( \n                  <div className=\"game\">\n                  <div className=\"game-board\">\n                      <Board  \n                      squares={current.squares}\n                      OnClick ={(i) => this.handleClick(i)}  \n                      />\n                  </div>\n                  <div className=\"game-info\"> \n                  <div>{status}</div>\n                  {/* <ol>{moves}</ol> */}\n                  </div>\n                  </div>\n                  );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}