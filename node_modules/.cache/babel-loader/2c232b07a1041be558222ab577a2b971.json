{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nimport Info from './Info'; // import Header from './Header';\n\nexport default class Game extends Component {\n  // adding a constructor to  the Game  initial state to contain an array\n  //  constructor(props){\n  //    super(props)\n  //    this.state = {\n  //      history:[{\n  //        squares:Array(9).fill(null),\n  //      }],\n  //      xisNext : true,\n  //    };\n  //  }\n  //  handleClick(i){\n  //  create a copy of the squares to be modified instead of modifying the original\n  // using slice() metho\n  // const history = this.state.history;\n  // const current = history[history.length -1];\n  // const newSquares = current.squares.slice();\n  // // once the player winn the game the game other buttons will be disabled until user refresh the page\n  //       if (determineTheWinner(newSquares) || newSquares[i]){\n  //               alert(\"the game is over, restart the game\")\n  //               return;\n  //       } \n  //        newSquares[i] = \"X\";\n  //         // Save new outcome of squares clicked  to the existing cells data\n  //        this.setState ({\n  //                history:history.concat([{\n  //                  squares:newSquares\n  //                }]),\n  //                xisNext: !this.state.xisNext,\n  // })\n  //  }\n  render() {\n    // const history = this.state.history;\n    // const current = history[history.length -1];\n    // const winner = determineTheWinner(current.squares);\n    // let  status;\n    //      if (winner){\n    //        status = \"winner: \" + winner;\n    //      }else {\n    //        status = \"Next player\" + (this.state.xisNext ? \"X\":\"O\");\n    //      } \n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Board // squares={current.squares}\n    // OnClick = {(i) => this.handleClick(i)}  \n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Game.js"],"names":["React","Component","Board","Info","Game","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,eAAe,MAAOC,IAAP,SAAoBH,SAApB,CAA8B;AAC7C;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACAI,EAAAA,MAAM,GAAE;AACN;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACM,wBACM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD,CAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,eAUA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CADN;AAiBT;;AA7D0C","sourcesContent":["import React, {Component}  from 'react';\nimport Board from './Board'; \nimport Info from './Info';\n// import Header from './Header';\nexport default class  Game extends Component { \n// adding a constructor to  the Game  initial state to contain an array\n    //  constructor(props){\n    //    super(props)\n    //    this.state = {\n    //      history:[{\n    //        squares:Array(9).fill(null),\n    //      }],\n    //      xisNext : true,\n    //    };\n    //  }\n    //  handleClick(i){\n      //  create a copy of the squares to be modified instead of modifying the original\n      // using slice() metho\n      // const history = this.state.history;\n      // const current = history[history.length -1];\n      // const newSquares = current.squares.slice();\n      // // once the player winn the game the game other buttons will be disabled until user refresh the page\n\n      //       if (determineTheWinner(newSquares) || newSquares[i]){\n      //               alert(\"the game is over, restart the game\")\n      //               return;\n      //       } \n      //        newSquares[i] = \"X\";\n\n      //         // Save new outcome of squares clicked  to the existing cells data\n      //        this.setState ({\n      //                history:history.concat([{\n      //                  squares:newSquares\n      //                }]),\n      //                xisNext: !this.state.xisNext,\n      // })\n    //  }\n    render(){ \n      // const history = this.state.history;\n      // const current = history[history.length -1];\n      // const winner = determineTheWinner(current.squares);\n      // let  status;\n      //      if (winner){\n      //        status = \"winner: \" + winner;\n\n      //      }else {\n      //        status = \"Next player\" + (this.state.xisNext ? \"X\":\"O\");\n      //      } \n            return( \n                  <div className=\"game\">\n                  <div className=\"game-board\">\n                      <Info/>\n                      <Board \n\n                      // squares={current.squares}\n                      // OnClick = {(i) => this.handleClick(i)}  \n\n                      />\n                  </div>\n                  <div className=\"game-info\"> \n                  {/* <div className=\"status\">{status}</div> */}\n                  {/* <ol>{moves}</ol> */}\n                  </div>\n                  </div>\n                  );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}