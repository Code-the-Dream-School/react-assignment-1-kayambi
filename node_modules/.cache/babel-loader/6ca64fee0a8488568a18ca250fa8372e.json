{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js\";\n// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\nclass Board extends React.Component {\n  // adding a constructor to  the board's initial state to contain an array\n  //  of 9 nulls corresponding to the squares\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: Array(9).fill(null),\n      xisNext: true\n    };\n  } // \n\n\n  handleClick(i) {\n    //  create a copy of the squares to be modified instead of modifying the original\n    // using slice() method and the take the turns between two players \n    const newCells = this.state.cells.slice();\n    newCells[i] = this.state.xisNext ? \"X\" : \"O\"; //        Save new outcome of cells clicked  to the existing cells data\n\n    this.setState({\n      cells: newCells,\n      xisNext: !this.state.xisNext\n    });\n  } // Square should be rendered and attach an event listiners to it.\n\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      value: this.state.cells[i] // a fuction that square can call when clicked  \n      ,\n      onClick: () => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js"],"names":["React","Cell","Board","Component","constructor","props","state","cells","Array","fill","xisNext","handleClick","i","newCells","slice","setState","renderSquare","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC5B;AACA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACV,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACLC,MAAAA,KAAK,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADD;AAELC,MAAAA,OAAO,EAAC;AAFH,KAAb;AAMP,GAX2B,CAY5B;;;AACAC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACN;AACA;AACA,UAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWC,KAAX,CAAiBO,KAAjB,EAAjB;AACOD,IAAAA,QAAQ,CAACD,CAAD,CAAR,GAAc,KAAKN,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAA0B,GAAxC,CAJD,CAKN;;AACO,SAAKK,QAAL,CAAe;AAEXR,MAAAA,KAAK,EAACM,QAFK;AAGXH,MAAAA,OAAO,EAAC,CAAC,KAAKJ,KAAL,CAAWI;AAHT,KAAf;AAOd,GA1B2B,CA2B5B;;;AACAM,EAAAA,YAAY,CAACJ,CAAD,EAAG;AACP,wBAAO,oBAAC,IAAD;AACC,MAAA,KAAK,EAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBK,CAAjB,CADT,CAEf;AAFe;AAGC,MAAA,OAAO,EAAI,MAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKP;;AAEPK,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKD,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CADF,eAME;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CANF,eAWE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAXF,CADA;AAkBE;;AAvD4B;;AAyDhC,eAAed,KAAf","sourcesContent":["// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\n\nclass Board extends React.Component { \n        // adding a constructor to  the board's initial state to contain an array\n        //  of 9 nulls corresponding to the squares\n        constructor(props){\n                super(props) \n                this.state = { \n                        cells:Array(9).fill(null),\n                        xisNext:true,\n\n                };\n\n        }\n        // \n        handleClick(i){\n                //  create a copy of the squares to be modified instead of modifying the original\n                // using slice() method and the take the turns between two players \n                const newCells = this.state.cells.slice();\n                       newCells[i] = this.state.xisNext ? \"X\": \"O\";\n                //        Save new outcome of cells clicked  to the existing cells data\n                       this.setState ({ \n                               \n                           cells:newCells,\n                           xisNext:!this.state.xisNext,\n                });\n              \n\n        }\n        // Square should be rendered and attach an event listiners to it.\n        renderSquare(i){\n                return <Cell \n                        value ={this.state.cells[i]} \n        // a fuction that square can call when clicked  \n                        onClick = {()=>this.handleClick(i)}\n                        />\n        }\n\n  render(){\n      return ( \n      <div className=\"container\">\n        <div className=\"row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}           \n                {this.renderSquare(2)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}           \n                {this.renderSquare(5)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}           \n                {this.renderSquare(8)}\n        </div>\n      </div>\n      )}\n    }\n    export default Board;\n          \n"]},"metadata":{},"sourceType":"module"}