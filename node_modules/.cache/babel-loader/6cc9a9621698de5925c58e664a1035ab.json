{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js\";\n// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\nclass Board extends React.Component {\n  // adding a constructor to  the board's initial state to contain an array\n  // Square should be rendered and attach an event listiners to it.\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      value: this.props.squares[i] // a fuction that square can call when clicked  \n      ,\n      onClick: () => this.props.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nexport default Board;\n\nfunction determineTheWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js"],"names":["React","Cell","Board","Component","renderSquare","i","props","squares","handleClick","render","determineTheWinner","lines","length","a","b","c"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC5B;AACA;AAEAC,EAAAA,YAAY,CAACC,CAAD,EAAG;AACP,wBAAQ,oBAAC,IAAD;AACA,MAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,CAAnB,CADR,CAEA;AAFA;AAGA,MAAA,OAAO,EAAI,MAAI,KAAKC,KAAL,CAAWE,WAAX,CAAuBH,CAAvB,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAMP;;AAEPI,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKL,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CADF,eAME;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CANF,eAWE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAXF,CADA;AAkBE;;AAhC4B;;AAkChC,eAAeF,KAAf;;AAEJ,SAASQ,kBAAT,CAA4BH,OAA5B,EAAoC;AAC5B,QAAMI,KAAK,GAAC,CACJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADI,EAEJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFI,EAGJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHI,EAIJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJI,EAKJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALI,EAMJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANI,EAOJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPI,EAQJ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARI,CAAZ;;AAWA,OAAK,IAAIN,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAIM,KAAK,CAACC,MAAzB,EAAmCP,CAAC,EAApC,EAAwC;AAChC,UAAM,CAACQ,CAAD,EAAGC,CAAH,EAAKC,CAAL,IAAUJ,KAAK,CAACN,CAAD,CAArB;;AACA,QAAIE,OAAO,CAACM,CAAD,CAAP,IAAcN,OAAO,CAACM,CAAD,CAAP,KACdN,OAAO,CAACO,CAAD,CADP,IACcP,OAAO,CAACM,CAAD,CAAP,KAAcN,OAAO,CAACQ,CAAD,CADvC,EAC4C;AAChC,aAAOR,OAAO,CAACM,CAAD,CAAd;AACP;AACZ;;AACD,SAAO,IAAP;AACP","sourcesContent":["// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\n\nclass Board extends React.Component { \n        // adding a constructor to  the board's initial state to contain an array\n        // Square should be rendered and attach an event listiners to it.\n\n        renderSquare(i){\n                return (<Cell \n                        value ={this.props.squares[i]} \n                        // a fuction that square can call when clicked  \n                        onClick = {()=>this.props.handleClick(i)}\n                        />\n                );\n        }\n\n  render(){\n      return( \n      <div className=\"container\"> \n        <div className=\"row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}           \n                {this.renderSquare(2)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}           \n                {this.renderSquare(5)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}           \n                {this.renderSquare(8)}\n        </div>\n      </div>\n      )}\n    }\n    export default Board;\n          \nfunction determineTheWinner(squares){\n        const lines=[\n                [0,1,2],\n                [3,4,5],\n                [6,7,8],\n                [0,3,6],\n                [1,4,7],\n                [2,5,8],\n                [0,4,8],\n                [2,4,6],\n\n        ];\n        for (let i=0; i <  lines.length  ; i ++){\n                const [a,b,c] = lines[i];\n                if (squares[a] && squares[a] ===\n                    squares[b] && squares[a]=== squares[c]) {\n                            return squares[a];\n                    }\n        }\n        return null;\n}\n\n"]},"metadata":{},"sourceType":"module"}