{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board'; // import Header from './Header';\n\nexport default class Game extends Component {\n  // adding a constructor to  the Game  initial state to contain an array\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xisNext: true\n    };\n  }\n\n  handleClick(i) {\n    //  create a copy of the squares to be modified instead of modifying the original\n    // using slice() metho\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const newSquares = current.squares.slice(); // once the player winn the game the game other buttons will be disabled until user refresh the page\n    // if (determineTheWinner(newSquares) || newSquares[i]){\n    //         alert(\"the game is over, restart the game\")\n    //         return;\n    // } \n\n    newSquares[i] = this.state.xisNext ? \"X\" : \"O\"; // Save new outcome of squares clicked  to the existing cellls data\n\n    this.setState({\n      history: history.concat([{\n        squares: newSquares\n      }]),\n      xisNext: !this.state.xisNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = determineTheWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = \"winner: \" + winner;\n    } else {\n      status = \"Next player\" + (this.state.xisNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      OnClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, status)));\n  }\n\n} //   helper function \n\nfunction determineTheWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","history","squares","Array","fill","xisNext","handleClick","i","current","length","newSquares","slice","setState","concat","render","winner","determineTheWinner","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\nimport Board from './Board'; \n// import Header from './Header';\n\n\nexport default class  Game extends Component { \n// adding a constructor to  the Game  initial state to contain an array\n     constructor(props){\n       super(props)\n       this.state = {\n         history:[{\n           squares:Array(9).fill(null),\n         }],\n         xisNext : true,\n       };\n     }\n\n\n     handleClick(i){\n      //  create a copy of the squares to be modified instead of modifying the original\n      // using slice() metho\n      const history = this.state.history;\n      const current = history[history.length -1];\n      const newSquares = current.squares.slice();\n      // once the player winn the game the game other buttons will be disabled until user refresh the page\n\n            // if (determineTheWinner(newSquares) || newSquares[i]){\n            //         alert(\"the game is over, restart the game\")\n            //         return;\n            // } \n\n             newSquares[i] = this.state.xisNext ?\"X\":\"O\";\n              // Save new outcome of squares clicked  to the existing cellls data\n             this.setState ({\n                     history:history.concat([{\n                       squares:newSquares\n                     }]),\n                     xisNext: !this.state.xisNext,\n      })\n     }\n\n    render(){ \n      const history = this.state.history;\n      const current = history[history.length -1];\n      const winner = determineTheWinner(current.squares);\n      let  status;\n           if (winner){\n             status = \"winner: \" + winner;\n\n           }else {\n             status = \"Next player\" + (this.state.xisNext ? \"X\":\"O\");\n           } \n            return( \n                  <div className=\"game\">\n                  <div className=\"game-board\">\n                      <Board squares={current.squares}\n                      OnClick ={(i) => this.handleClick(i)}  \n                      />\n                  </div>\n                  <div className=\"game-info\"> \n                  <div className=\"status\">{status}</div>\n                  {/* <ol>{moves}</ol> */}\n                  </div>\n                  </div>\n                  );\n  }\n}\n\n       //   helper function \n    function determineTheWinner(squares) {\n        const lines = [\n          [0, 1, 2],\n          [3, 4, 5],\n          [6, 7, 8],\n          [0, 3, 6],\n          [1, 4, 7],\n          [2, 5, 8],\n          [0, 4, 8],\n          [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n          const [a, b, c] = lines[i];\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n          }\n        }\n        return null;\n      }"]},"metadata":{},"sourceType":"module"}