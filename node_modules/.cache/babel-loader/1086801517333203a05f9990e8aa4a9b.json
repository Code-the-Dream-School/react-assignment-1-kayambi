{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js\";\n// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\nclass Board extends React.Component {\n  handleClick(i) {\n    //  create a copy of the squares to be modified instead of modifying the original\n    // using slice() method and the take the turns between two players \n    const cells = this.state.cells.slice(); // Change the board's handleClick functiion to return early by ignoring a click if some has won the game \n    // or if the a square is already filled: \n\n    if (determineTheWinner(cells) || cells[i]) {\n      return;\n    }\n\n    cells[i] = this.state.xisNext ? \"X\" : \"O\"; //        Save new outcome of cells clicked  to the existing cells data\n\n    this.setState({\n      cells: cells,\n      xisNext: !this.state.xisNext\n    });\n  } // Square should be rendered and attach an event listiners to it.\n\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      value: this.props.cells[i] // a fuction that square can call when clicked  \n      ,\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }\n    });\n  }\n\n  render() {\n    //   Check if the player has won or lost\n    const winner = determineTheWinner(this.state.cells);\n    let statusHis;\n\n    if (winner) {\n      statusHis = 'winner:' + winner;\n    } else {\n      statusHis = 'Next Player: ' + (this.state.xisNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }\n    }, statusHis), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nexport default Board;\n\nfunction determineTheWinner(cells) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n      return cells[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js"],"names":["React","Cell","Board","Component","handleClick","i","cells","state","slice","determineTheWinner","xisNext","setState","renderSquare","props","onClick","render","winner","statusHis","lines","length","a","b","c"],"mappings":"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","sourcesContent":["// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\nclass Board extends React.Component {  \n        handleClick(i){\n                //  create a copy of the squares to be modified instead of modifying the original\n                // using slice() method and the take the turns between two players \n                const cells = this.state.cells.slice();\n                // Change the board's handleClick functiion to return early by ignoring a click if some has won the game \n                // or if the a square is already filled: \n                if (determineTheWinner(cells) || cells[i]){\n                        return;\n                }\n                       cells[i] = this.state.xisNext ? \"X\": \"O\";\n                //        Save new outcome of cells clicked  to the existing cells data\n                       this.setState ({    \n                           cells:cells,\n                           xisNext:!this.state.xisNext,\n                });\n        }\n        // Square should be rendered and attach an event listiners to it.\n        renderSquare(i){\n                return <Cell value ={this.props.cells[i]} \n        // a fuction that square can call when clicked  \n                        onClick = {()=> this.props.onClick(i)}\n                        />\n        }\n        render(){\n        //   Check if the player has won or lost\n          const winner = determineTheWinner(this.state.cells)\n                let  statusHis;\n                if (winner){\n                        statusHis = 'winner:' + winner;\n                }else{\n                       statusHis = 'Next Player: ' + (this.state.xisNext ? \"X\":\"O\")   \n                }\n        \n      return ( \n      <div className=\"container\">\n       <div className=\"status\">{statusHis}</div>\n        <div className=\"row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}           \n                {this.renderSquare(2)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}           \n                {this.renderSquare(5)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}           \n                {this.renderSquare(8)}\n        </div>\n      </div>\n      )}\n    }\n    export default Board;\n          \nfunction determineTheWinner(cells){\n        const lines=[\n                [0,1,2],\n                [3,4,5],\n                [6,7,8],\n                [0,3,6],\n                [1,4,7],\n                [2,5,8],\n                [0,4,8],\n                [2,4,6],\n\n        ];\n        for (let i=0; i <  lines.length  ; i ++){\n                const [a,b,c] = lines[i];\n                if (cells[a] && cells[a] === cells[b] && cells[a]=== cells[c]) \n                    {\n                            return cells[a];\n                    }\n        }\n        return null;\n}"]},"metadata":{},"sourceType":"module"}