{"ast":null,"code":"var _jsxFileName = \"/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js\";\n// react class component \nimport React from 'react';\nimport Cell from './Cell';\nexport default class Board extends React.Component {\n  // adding a constructor to  the board's initial state to contain anarray\n  //  of 9 nulls corresponding to the squares\n  handleClick(i) {\n    //  create a copy of the squares to be modified instead of modifying the original\n    // using slice() metho\n    const newSquares = this.state.squares.slice();\n\n    if (determineTheWinner(newSquares) || newSquares[i]) {\n      alert(\"the game is over, restart the game\");\n      return;\n    }\n\n    newSquares[i] = this.state.xisNext ? \"X\" : \"O\"; //        Save new outcome of squares clicked  to the existing cellls data\n\n    this.setState({\n      squares: newSquares,\n      xisNext: !this.state.xisNext\n    });\n  } // Square should be rendered and attach an event listiners to it.\n\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      value: this.props.squares[i] // a fuction that square can call when clicked  \n      ,\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }\n    });\n  }\n\n  render() {\n    const winner = determineTheWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner is :\" + winner;\n    } else {\n      status = \"next player\" + (this.state.xisNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}","map":{"version":3,"sources":["/Users/musafirikayambi/Desktop/react-assignment-1-kayambi/src/components/Board.js"],"names":["React","Cell","Board","Component","handleClick","i","newSquares","state","squares","slice","determineTheWinner","alert","xisNext","setState","renderSquare","props","onClick","render","winner","status"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,eAAgB,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC5C;AACA;AAEAC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACN;AACA;AACA,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,EAAnB;;AACM,QAAIC,kBAAkB,CAACJ,UAAD,CAAlB,IAAkCA,UAAU,CAACD,CAAD,CAAhD,EAAoD;AAC5CM,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACA;AACP;;AACAL,IAAAA,UAAU,CAACD,CAAD,CAAV,GAAgB,KAAKE,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAAzC,CARD,CASN;;AACO,SAAKC,QAAL,CAAe;AACPL,MAAAA,OAAO,EAAGF,UADH;AAEPM,MAAAA,OAAO,EAAG,CAAC,KAAKL,KAAL,CAAWK;AAFf,KAAf;AAId,GAlB2C,CAmB5C;;;AACAE,EAAAA,YAAY,CAACT,CAAD,EAAG;AACP,wBAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAG,KAAKU,KAAL,CAAWP,OAAX,CAAmBH,CAAnB,CAAd,CACf;AADe;AAEC,MAAA,OAAO,EAAI,MAAM,KAAKU,KAAL,CAAWC,OAAX,CAAmBX,CAAnB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIP;;AACDY,EAAAA,MAAM,GAAE;AACR,UAAMC,MAAM,GAAGR,kBAAkB,CAAC,KAAKH,KAAL,CAAWC,OAAZ,CAAjC;AACA,QAAIW,MAAJ;;AACA,QAAID,MAAJ,EAAW;AACHC,MAAAA,MAAM,GAAG,gBAAgBD,MAAzB;AACP,KAFD,MAEM;AACEC,MAAAA,MAAM,GAAG,iBAAiB,KAAKZ,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAAyB,GAA1C,CAAT;AACP;;AACH,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBO,MAAzB,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKL,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAFF,eAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAPF,eAYE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKA,YAAL,CAAkB,CAAlB,CADT,EAES,KAAKA,YAAL,CAAkB,CAAlB,CAFT,EAGS,KAAKA,YAAL,CAAkB,CAAlB,CAHT,CAZF,CADA;AAmBE;;AArD4C","sourcesContent":["// react class component \nimport React from 'react';\nimport Cell from './Cell';\n\n\nexport  default class Board extends React.Component { \n        // adding a constructor to  the board's initial state to contain anarray\n        //  of 9 nulls corresponding to the squares\n\n        handleClick(i){\n                //  create a copy of the squares to be modified instead of modifying the original\n                // using slice() metho\n                const newSquares = this.state.squares.slice();\n                      if (determineTheWinner(newSquares) || newSquares[i]){\n                              alert(\"the game is over, restart the game\")\n                              return;\n                      } \n                       newSquares[i] = this.state.xisNext ? \"X\":\"O\" ;\n                //        Save new outcome of squares clicked  to the existing cellls data\n                       this.setState ({\n                               squares : newSquares,\n                               xisNext : !this.state.xisNext,\n                })\n        }\n        // Square should be rendered and attach an event listiners to it.\n        renderSquare(i){\n                return <Cell value ={this.props.squares[i]} \n        // a fuction that square can call when clicked  \n                        onClick = {() => this.props.onClick(i)}\n                        />\n        }\n        render(){\n        const winner = determineTheWinner(this.state.squares) \n        let status;\n        if (winner){\n                status = \"Winner is :\" + winner;\n        }else {\n                status = \"next player\" + (this.state.xisNext ? \"X\":\"O\");\n        }\n      return ( \n      <div className=\"container\">\n        <div className=\"status\">{status}</div>\n        <div className=\"row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}           \n                {this.renderSquare(2)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}           \n                {this.renderSquare(5)}\n        </div>\n        <div className=\"row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}           \n                {this.renderSquare(8)}\n        </div>\n      </div>\n      )}\n    }\n   "]},"metadata":{},"sourceType":"module"}